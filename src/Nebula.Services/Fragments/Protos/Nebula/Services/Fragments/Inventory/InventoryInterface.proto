syntax = "proto3";

package Nebula.Services.Fragments.Inventory;
import "google/api/annotations.proto";
import "Protos/Nebula/Services/Fragments/inventory/ProductRecord.proto";

service InventoryInterface {
	rpc CreateProduct (CreateProductRequest) returns (CreateProductResponse) {
		option (google.api.http) = {
			post: "/api/v1/inventory/{OrganizationId}/products"
			body: "*"
		};
	}

	rpc GetProductById (GetProductByIdRequest) returns (GetProductByIdResponse) {
		option (google.api.http) = {
			get: "/api/v1/inventory/{OrganizationId}/products/{ProductId}"
		};
	}

	rpc ListProducts (ListProductsRequest) returns (ListProductsResponse) {
		option (google.api.http) = {
			get: "/api/v1/inventory/{OrganizationId}/products"
		};
	}

	rpc UpdateProduct (UpdateProductRequest) returns (UpdateProductResponse) {
		option (google.api.http) = {
			put: "/api/v1/inventory/{OrganizationId}/products/{ProductId}"
			body: "*"
		};
	}
}

message CreateProductRequest {
	string OrganizationId = 1;
	string Sku = 2;
	string Name = 3;
	string Description = 4;
	string ImageAssetId = 5;
	string Unit = 6;
}

message CreateProductResponse {
	string Error = 1;
	Nebula.Services.Fragments.Inventory.ProductRecord Record = 2;
}

message GetProductByIdRequest {
	string ProductId = 1;
	string OrganizationId = 2;
}

message GetProductByIdResponse {
	string Error = 1;
	Nebula.Services.Fragments.Inventory.ProductRecord Record = 2;
}

message ListProductsRequest {
	string OrganizationId = 1;
}

message ListProductsResponse {
	repeated Nebula.Services.Fragments.Inventory.ProductRecord Records = 1;
}

message UpdateProductRequest {
	string ProductId = 1;
	string OrganizationId = 2;
}

message UpdateProductResponse {}