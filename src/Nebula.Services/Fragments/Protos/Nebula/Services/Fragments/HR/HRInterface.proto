syntax = "proto3";

package Nebula.Services.Fragments.HR;

import "google/api/annotations.proto";
import "Protos/Nebula/Services/Fragments/HR/EmployeeRecord.proto";
import "Protos/Nebula/Services/Fragments/HR/PayrollRecord.proto";
import "Protos/Nebula/Services/Fragments/HR/TimesheetRecord.proto";

service HRInterface {
  rpc GetEmployees (GetEmployeesRequest) returns (GetEmployeesResponse) {
    option (google.api.http) = {
      get: "/api/v1/hr/{OrganizationId}/employees"
    };
  }

  rpc GetEmployeeById (GetEmployeeByIdRequest) returns (GetEmployeeByIdResponse) {
    option (google.api.http) = {
      get: "/api/v1/hr/{OrganizationId}/employees/{EmployeeId}"
    };
  }

  rpc CreateEmployee (Nebula.Services.Fragments.HR.EmployeeRecord) returns (HRMutationResponse) {
    option (google.api.http) = {
      post: "/api/v1/hr/employees"
      body: "*"
    };
  }

  rpc UpdateEmployee (Nebula.Services.Fragments.HR.EmployeeRecord) returns (HRMutationResponse) {
    option (google.api.http) = {
      put: "/api/v1/hr/employees/{EmployeeId}"
      body: "*"
    };
  }

  rpc TerminateEmployee (TerminateEmployeeRequest) returns (HRMutationResponse) {
    option (google.api.http) = {
      post: "/api/v1/hr/employees/{EmployeeId}/terminate"
      body: "*"
    };
  }

  rpc DeleteEmployee (DeleteEmployeeRequest) returns (HRMutationResponse) {
    option (google.api.http) = {
      delete: "/api/v1/hr/{OrganizationId}/employees/{EmployeeId}"
    };
  }

  rpc GetPayrollsByEmployee (GetPayrollsByEmployeeRequest) returns (GetPayrollsResponse) {
    option (google.api.http) = {
      get: "/api/v1/hr/{OrganizationId}/employees/{EmployeeId}/payroll"
    };
  }

  rpc ListPayrolls (ListPayrollsRequest) returns (GetPayrollsResponse) {
    option (google.api.http) = {
      get: "/api/v1/hr/{OrganizationId}/employees/payroll"
    };
  }

  rpc CreatePayroll (Nebula.Services.Fragments.HR.PayrollRecord) returns (HRMutationResponse) {
    option (google.api.http) = {
      post: "/api/v1/hr/payroll"
      body: "*"
    };
  }

  rpc GetTimesheetsByEmployee (GetTimesheetsByEmployeeRequest) returns (GetTimesheetsResponse) {
    option (google.api.http) = {
      get: "/api/v1/hr/{OrganizationId}/employees/{EmployeeId}/timesheet"
    };
  }

  rpc ListTimesheets (ListTimesheetsRequest) returns (GetTimesheetsResponse) {
    option (google.api.http) = {
      get: "/api/v1/hr/{OrganizationId}/employees/timesheet"
    };
  }

  rpc LogTimesheet (Nebula.Services.Fragments.HR.TimesheetRecord) returns (HRMutationResponse) {
    option (google.api.http) = {
      post: "/api/v1/hr/timesheet"
      body: "*"
    };
  }
}

message GetEmployeesRequest {
  string OrganizationId = 1;
}

message GetEmployeesResponse {
  string Error = 1;
  repeated Nebula.Services.Fragments.HR.EmployeeRecord Records = 2;
}

message GetEmployeeByIdRequest {
  string OrganizationId = 1;
  string EmployeeId = 2;
}

message GetEmployeeByIdResponse {
  string Error = 1;
  Nebula.Services.Fragments.HR.EmployeeRecord Record = 2;
}

message TerminateEmployeeRequest {
  string OrganizationId = 1;
  string EmployeeId = 2;
  string Reason = 3;
}

message DeleteEmployeeRequest {
  string OrganizationId = 1;
  string EmployeeId = 2;
}

message GetPayrollsByEmployeeRequest {
  string OrganizationId = 1;
  string EmployeeId = 2;
}

message ListPayrollsRequest {
  string OrganizationId = 1;
}

message GetPayrollsResponse {
  string Error = 1;
  repeated Nebula.Services.Fragments.HR.PayrollRecord Records = 2;
}

message GetTimesheetsByEmployeeRequest {
  string OrganizationId = 1;
  string EmployeeId = 2;
}

message ListTimesheetsRequest {
  string OrganizationId = 1;
}

message GetTimesheetsResponse {
  string Error = 1;
  repeated Nebula.Services.Fragments.HR.TimesheetRecord Records = 2;
}

message HRMutationResponse {
  string Error = 1;
  bool Success = 2;
}
