syntax = "proto3";

package Nebula.Services.Fragments.Accounting;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "Protos/Nebula/Services/Fragments/Accounting/AccountRecord.proto";
import "Protos/Nebula/Services/Fragments/Accounting/JournalEntryRecord.proto";
import "Protos/Nebula/Services/Fragments/Accounting/TransactionRecord.proto";

service AccountingInterface {
  rpc GetChartOfAccounts (GetChartOfAccountsRequest) returns (GetChartOfAccountsResponse) {
    option (google.api.http) = {
      get: "/api/v1/finance/{OrganizationId}/accounts"
    };
  }

  rpc CreateJournalEntry (CreateJournalEntryRequest) returns (CreateJournalEntryResponse) {
    option (google.api.http) = {
      post: "/api/v1/finance/{OrganizationId}/journal"
      body: "*"
    };
  }

  rpc GetJournalEntries (GetJournalEntriesRequest) returns (GetJournalEntriesResponse) {
    option (google.api.http) = {
      get: "/api/v1/finance/{OrganizationId}/journal"
    };
  }

  rpc GetLedger (GetLedgerRequest) returns (GetLedgerResponse) {
    option (google.api.http) = {
      get: "/api/v1/finance/{OrganizationId}/ledger"
    };
  }

  rpc PostTransaction (PostTransactionRequest) returns (PostTransactionResponse) {
    option (google.api.http) = {
      post: "/api/v1/finance/{OrganizationId}/transactions"
      body: "*"
    };
  }

  rpc GetTransactions (GetTransactionsRequest) returns (GetTransactionsResponse) {
    option (google.api.http) = {
      get: "/api/v1/finance/{OrganizationId}/transactions"
    };
  }
}

message GetChartOfAccountsRequest {
  string OrganizationId = 1;
}

message GetChartOfAccountsResponse {
  string Error = 1;
  repeated AccountRecord Accounts = 2;
}

message CreateJournalEntryRequest {
  string OrganizationId = 1;
  JournalEntryRecord Entry = 2;
}

message CreateJournalEntryResponse {
  string Error = 1;
  string JournalEntryId = 2;
}

message GetJournalEntriesRequest {
  string OrganizationId = 1;
}

message GetJournalEntriesResponse {
  string Error = 1;
  repeated JournalEntryRecord Entries = 2;
}

message GetLedgerRequest {
  string OrganizationId = 1;
}

message GetLedgerResponse {
  string Error = 1;
  repeated JournalEntryRecord Entries = 2;
}

message PostTransactionRequest {
  string OrganizationId = 1;
  TransactionRecord Transaction = 2;
}

message PostTransactionResponse {
  string Error = 1;
  string TransactionId = 2;
}

message GetTransactionsRequest {
  string OrganizationId = 1;
}

message GetTransactionsResponse {
  string Error = 1;
  repeated TransactionRecord Transactions = 2;
}
