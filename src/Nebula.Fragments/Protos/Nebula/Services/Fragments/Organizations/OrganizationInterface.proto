syntax = "proto3";

package Nebula.Services.Fragments.Organziations;
import "google/api/annotations.proto";
import "Protos/Nebula/Services/Fragments/Organizations/OrganizationRecord.proto";
import "Protos/Nebula/Services/Fragments/Organizations/EmployeeRecord.proto";
import "Protos/Nebula/Services/Fragments/Organizations/OrganizationInviteRecord.proto";
import "google/protobuf/timestamp.proto";

service OrganizationInterface {
	rpc CreateOrganization (CreateOrganizationRequest) returns (CreateOrganizationResponse) {
		option (google.api.http) = {
			post: "/api/v1/organizations"
			body: "*"
		};
	}

	rpc InviteUser (InviteUserRequest) returns (InviteUserResponse) {
		option (google.api.http) = {
			post: "/api/v1/organizations/{OrganizationId}/invite"
			body: "*"
		};
	}

	rpc JoinOrganization (JoinOrganizationRequest) returns (JoinOrganizationResponse) {
		option (google.api.http) = {
			post: "/api/v1/{OrganizationId}/organizations/join"
			body: "*"
		};
	}

	rpc LeaveOrganization (LeaveOrganizationRequest) returns (LeaveOrganizationResponse) {
		option (google.api.http) = {
			post: "/api/v1/organizations/{OrganizationId}/leave"
			body: "*"
		};
	}

	rpc GetOrganizationsForUser (GetOrganizationsForUserRequest) returns (GetOrganizationsForUserResponse) {
		option (google.api.http) = {
			get: "/api/v1/organizations/for-user/{UserId}"
		};
	}

	rpc GetOrganization (GetOrganizationRequest) returns (GetOrganizationResponse) {
		option (google.api.http) = {
			get: "/api/v1/organizations/{OrganizationId}"
		};
	}

	 rpc GetEmployees (GetEmployeesRequest) returns (GetEmployeesResponse) {
    option (google.api.http) = {
      get: "/api/v1/organizations/{OrganizationId}/employees"
    };
  }

  rpc GetEmployeeById (GetEmployeeByIdRequest) returns (GetEmployeeByIdResponse) {
    option (google.api.http) = {
      get: "/api/v1/organizations/{OrganizationId}/employees/{EmployeeId}"
    };
  }

  rpc GetOwnEmployee (GetOwnEmployeeRequest) returns (GetOwnEmployeeResponse) {
	option (google.api.http) = {
	  get: "/api/v1/organizations/{OrganizationId}/employees/me"
	};
  }

  rpc UpdateEmployee (UpdateEmployeeRequest) returns (HRMutationResponse) {
    option (google.api.http) = {
      put: "/api/v1/organizations/{OrganizationId}/employees/{EmployeeId}"
      body: "*"
    };
  }

  rpc TerminateEmployee (TerminateEmployeeRequest) returns (HRMutationResponse) {
    option (google.api.http) = {
      post: "/api/v1/organizations/{OrganizationId}/employees/{EmployeeId}/terminate"
      body: "*"
    };
  }
}

message CreateOrganizationRequest {
	string OrganizationName = 1;
}

message CreateOrganizationResponse {
	string Error = 1;
	Nebula.Services.Fragments.Organizations.OrganizationRecord Record = 2;
}

message InviteUserRequest {
	string UserId = 1;
	string OrganizationId = 2;
	google.protobuf.Timestamp ValidUntilUTC = 3;
}

message InviteUserResponse {
	string Error = 1;
	Nebula.Services.Fragments.Organizations.OrganizationInviteRecord Record = 2;
}


message JoinOrganizationRequest {
	string InviteId = 1;
	string OrganizationId = 2;
}

message JoinOrganizationResponse {
	string Error = 1;
}

message LeaveOrganizationRequest {
	string OrganizationId = 1;
}

message LeaveOrganizationResponse {
	string Error = 1;
}

message GetOrganizationsForUserRequest {
	string UserId = 1;
}

message GetOrganizationsForUserResponse {
	string Error = 1;
	repeated Nebula.Services.Fragments.Organizations.OrganizationRecord Records = 2;
}

message GetOrganizationRequest {
	string OrganizationId = 1;
}

message GetOrganizationResponse {
	string Error = 1;
	Nebula.Services.Fragments.Organizations.OrganizationRecord Record = 2;
}

message GetEmployeesRequest {
  string OrganizationId = 1;
}

message GetEmployeesResponse {
  string Error = 1;
  repeated Nebula.Services.Fragments.Organizations.EmployeeRecord Records = 2;
}

message GetEmployeeByIdRequest {
  string OrganizationId = 1;
  string EmployeeId = 2;
}

message GetEmployeeByIdResponse {
  string Error = 1;
  Nebula.Services.Fragments.Organizations.EmployeeRecord Record = 2;
}

message GetOwnEmployeeRequest {
	string OrganizationId = 1;
}

message GetOwnEmployeeResponse {
	string Error = 1;
	Nebula.Services.Fragments.Organizations.EmployeeRecord Record = 2;
}

message TerminateEmployeeRequest {
  string OrganizationId = 1;
  string EmployeeId = 2;
  string Reason = 3;
}

message UpdateEmployeeRequest {
    string EmployeeId = 1;
    string OrganizationId = 2;
    Nebula.Services.Fragments.Organizations.EmployeeRecord Record = 3;
}

message HRMutationResponse {
  string Error = 1;
  bool Success = 2;
}